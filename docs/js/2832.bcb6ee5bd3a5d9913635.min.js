"use strict";(self.webpackChunkimtoken_dapp=self.webpackChunkimtoken_dapp||[]).push([[2832],{2832:function(r,t,o){var n,e=o(48764).Buffer,a=this&&this.__extends||(n=function(r,t){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,t){r.__proto__=t}||function(r,t){for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(r[o]=t[o])},n(r,t)},function(r,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function o(){this.constructor=r}n(r,t),r.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}),i=this&&this.__assign||function(){return i=Object.assign||function(r){for(var t,o=1,n=arguments.length;o<n;o++)for(var e in t=arguments[o])Object.prototype.hasOwnProperty.call(t,e)&&(r[e]=t[e]);return r},i.apply(this,arguments)},s=this&&this.__values||function(r){var t="function"==typeof Symbol&&Symbol.iterator,o=t&&r[t],n=0;if(o)return o.call(r);if(r&&"number"==typeof r.length)return{next:function(){return r&&n>=r.length&&(r=void 0),{value:r&&r[n++],done:!r}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0}),t.ConsensusAlgorithm=t.ConsensusType=t.Hardfork=t.Chain=t.CustomChain=void 0;var u,f,h=o(17187),l=o(34606),c=o(22751),d=o(74083),p=o(37459),y=o(97616);!function(r){r.PolygonMainnet="polygon-mainnet",r.PolygonMumbai="polygon-mumbai",r.ArbitrumRinkebyTestnet="arbitrum-rinkeby-testnet",r.xDaiChain="x-dai-chain",r.OptimisticKovan="optimistic-kovan",r.OptimisticEthereum="optimistic-ethereum"}(u=t.CustomChain||(t.CustomChain={})),function(r){r[r.Mainnet=1]="Mainnet",r[r.Ropsten=3]="Ropsten",r[r.Rinkeby=4]="Rinkeby",r[r.Kovan=42]="Kovan",r[r.Goerli=5]="Goerli"}(t.Chain||(t.Chain={})),function(r){r.Chainstart="chainstart",r.Homestead="homestead",r.Dao="dao",r.TangerineWhistle="tangerineWhistle",r.SpuriousDragon="spuriousDragon",r.Byzantium="byzantium",r.Constantinople="constantinople",r.Petersburg="petersburg",r.Istanbul="istanbul",r.MuirGlacier="muirGlacier",r.Berlin="berlin",r.London="london",r.ArrowGlacier="arrowGlacier",r.Shanghai="shanghai",r.Merge="merge"}(f=t.Hardfork||(t.Hardfork={})),function(r){r.ProofOfStake="pos",r.ProofOfWork="pow",r.ProofOfAuthority="poa"}(t.ConsensusType||(t.ConsensusType={})),function(r){r.Ethash="ethash",r.Clique="clique",r.Casper="casper"}(t.ConsensusAlgorithm||(t.ConsensusAlgorithm={}));var k=function(r){function t(t){var o,n,e,a,i=r.call(this)||this;i._supportedHardforks=[],i._eips=[],i._customChains=null!==(e=t.customChains)&&void 0!==e?e:[],i._chainParams=i.setChain(t.chain),i.DEFAULT_HARDFORK=null!==(a=i._chainParams.defaultHardfork)&&void 0!==a?a:f.Istanbul;try{for(var u=s(i._chainParams.hardforks),h=u.next();!h.done;h=u.next()){var l=h.value;l.forkHash||(l.forkHash=i._calcForkHash(l.name))}}catch(r){o={error:r}}finally{try{h&&!h.done&&(n=u.return)&&n.call(u)}finally{if(o)throw o.error}}return i._hardfork=i.DEFAULT_HARDFORK,t.supportedHardforks&&(i._supportedHardforks=t.supportedHardforks),t.hardfork&&i.setHardfork(t.hardfork),t.eips&&i.setEIPs(t.eips),i}return a(t,r),t.custom=function(r,o){var n;void 0===o&&(o={});var e=null!==(n=o.baseChain)&&void 0!==n?n:"mainnet",a=i({},t._getChainParams(e));if(a.name="custom-chain","string"!=typeof r)return new t(i({chain:i(i({},a),r)},o));if(r===u.PolygonMainnet)return t.custom({name:u.PolygonMainnet,chainId:137,networkId:137});if(r===u.PolygonMumbai)return t.custom({name:u.PolygonMumbai,chainId:80001,networkId:80001});if(r===u.ArbitrumRinkebyTestnet)return t.custom({name:u.ArbitrumRinkebyTestnet,chainId:421611,networkId:421611});if(r===u.xDaiChain)return t.custom({name:u.xDaiChain,chainId:100,networkId:100});if(r===u.OptimisticKovan)return t.custom({name:u.OptimisticKovan,chainId:69,networkId:69},{hardfork:f.Berlin});if(r===u.OptimisticEthereum)return t.custom({name:u.OptimisticEthereum,chainId:10,networkId:10},{hardfork:f.Berlin});throw new Error("Custom chain "+r+" not supported")},t.forCustomChain=function(r,o,n,e){var a=t._getChainParams(r);return new t({chain:i(i({},a),o),hardfork:n,supportedHardforks:e})},t.isSupportedChainId=function(r){var t=(0,d._getInitializedChains)();return Boolean(t.names[r.toString()])},t._getChainParams=function(r,t){var o=(0,d._getInitializedChains)(t);if("number"==typeof r||c.BN.isBN(r)){if(r=r.toString(),o.names[r])return o[o.names[r]];throw new Error("Chain with ID "+r+" not supported")}if(o[r])return o[r];throw new Error("Chain with name "+r+" not supported")},t.prototype.setChain=function(r){var o,n;if("number"==typeof r||"string"==typeof r||c.BN.isBN(r)){var e=void 0;e=this._customChains&&this._customChains.length>0&&Array.isArray(this._customChains[0])?this._customChains.map((function(r){return r[0]})):this._customChains,this._chainParams=t._getChainParams(r,e)}else{if("object"!=typeof r)throw new Error("Wrong input format");if(this._customChains.length>0)throw new Error("Chain must be a string, number, or BN when initialized with customChains passed in");try{for(var a=s(["networkId","genesis","hardforks","bootstrapNodes"]),i=a.next();!i.done;i=a.next()){var u=i.value;if(void 0===r[u])throw new Error("Missing required chain parameter: "+u)}}catch(r){o={error:r}}finally{try{i&&!i.done&&(n=a.return)&&n.call(a)}finally{if(o)throw o.error}}this._chainParams=r}return this._chainParams},t.prototype.setHardfork=function(r){var t,o;if(!this._isSupportedHardfork(r))throw new Error("Hardfork "+r+" not set as supported in supportedHardforks");var n=!1;try{for(var e=s(p.hardforks),a=e.next();!a.done;a=e.next()){a.value[0]===r&&(this._hardfork!==r&&(this._hardfork=r,this.emit("hardforkChanged",r)),n=!0)}}catch(r){t={error:r}}finally{try{a&&!a.done&&(o=e.return)&&o.call(e)}finally{if(t)throw t.error}}if(!n)throw new Error("Hardfork with name "+r+" not supported")},t.prototype.getHardforkByBlockNumber=function(r,t){var o,n;r=(0,c.toType)(r,c.TypeOutput.BN),t=(0,c.toType)(t,c.TypeOutput.BN);var e,a,i,u=f.Chainstart;try{for(var h=s(this.hardforks()),l=h.next();!l.done;l=h.next()){var d=l.value;if(null!==d.block)r.gte(new c.BN(d.block))&&(u=d.name),t&&d.td&&(t.gte(new c.BN(d.td))?e=d.name:a=i),i=d.name;else if(null!=t&&void 0!==d.td&&null!==d.td&&t.gte(new c.BN(d.td)))return d.name}}catch(r){o={error:r}}finally{try{l&&!l.done&&(n=h.return)&&n.call(h)}finally{if(o)throw o.error}}if(t){var p="block number: "+r+" (-> "+u+"), ";if(e&&!this.hardforkGteHardfork(u,e)){var y="HF determined by block number is lower than the minimum total difficulty HF";throw p+="total difficulty: "+t+" (-> "+e+")",new Error(y+": "+p)}if(a&&!this.hardforkGteHardfork(a,u)){y="Maximum HF determined by total difficulty is lower than the block number HF";throw p+="total difficulty: "+t+" (-> "+a+")",new Error(y+": "+p)}}return u},t.prototype.setHardforkByBlockNumber=function(r,t){var o=this.getHardforkByBlockNumber(r,t);return this.setHardfork(o),o},t.prototype._chooseHardfork=function(r,t){if(void 0===t&&(t=!0),r){if(t&&!this._isSupportedHardfork(r))throw new Error("Hardfork "+r+" not set as supported in supportedHardforks")}else r=this._hardfork;return r},t.prototype._getHardfork=function(r){var t,o,n=this.hardforks();try{for(var e=s(n),a=e.next();!a.done;a=e.next()){var i=a.value;if(i.name===r)return i}}catch(r){t={error:r}}finally{try{a&&!a.done&&(o=e.return)&&o.call(e)}finally{if(t)throw t.error}}throw new Error("Hardfork "+r+" not defined for chain "+this.chainName())},t.prototype._isSupportedHardfork=function(r){var t,o;if(!(this._supportedHardforks.length>0))return!0;try{for(var n=s(this._supportedHardforks),e=n.next();!e.done;e=n.next()){if(r===e.value)return!0}}catch(r){t={error:r}}finally{try{e&&!e.done&&(o=n.return)&&o.call(n)}finally{if(t)throw t.error}}return!1},t.prototype.setEIPs=function(r){var t,o,n=this;void 0===r&&(r=[]);var e=function(t){if(!(t in y.EIPs))throw new Error(t+" not supported");var o=a.gteHardfork(y.EIPs[t].minimumHardfork);if(!o)throw new Error(t+" cannot be activated on hardfork "+a.hardfork()+", minimumHardfork: "+o);y.EIPs[t].requiredEIPs&&y.EIPs[t].requiredEIPs.forEach((function(o){if(!r.includes(o)&&!n.isActivatedEIP(o))throw new Error(t+" requires EIP "+o+", but is not included in the EIP list")}))},a=this;try{for(var i=s(r),u=i.next();!u.done;u=i.next()){e(u.value)}}catch(r){t={error:r}}finally{try{u&&!u.done&&(o=i.return)&&o.call(i)}finally{if(t)throw t.error}}this._eips=r},t.prototype.param=function(r,t){var o,n,e=null;try{for(var a=s(this._eips),i=a.next();!i.done;i=a.next()){var u=i.value;if(null!==(e=this.paramByEIP(r,t,u)))return e}}catch(r){o={error:r}}finally{try{i&&!i.done&&(n=a.return)&&n.call(a)}finally{if(o)throw o.error}}return this.paramByHardfork(r,t,this._hardfork)},t.prototype.paramByHardfork=function(r,t,o){var n,e,a,i;o=this._chooseHardfork(o);var u=null;try{for(var f=s(p.hardforks),h=f.next();!h.done;h=f.next()){var l=h.value;if("eips"in l[1]){var c=l[1].eips;try{for(var d=(a=void 0,s(c)),y=d.next();!y.done;y=d.next()){var k=y.value,v=this.paramByEIP(r,t,k);u=null!==v?v:u}}catch(r){a={error:r}}finally{try{y&&!y.done&&(i=d.return)&&i.call(d)}finally{if(a)throw a.error}}}else{if(!l[1][r])throw new Error("Topic "+r+" not defined");void 0!==l[1][r][t]&&(u=l[1][r][t].v)}if(l[0]===o)break}}catch(r){n={error:r}}finally{try{h&&!h.done&&(e=f.return)&&e.call(f)}finally{if(n)throw n.error}}return u},t.prototype.paramByEIP=function(r,t,o){if(!(o in y.EIPs))throw new Error(o+" not supported");var n=y.EIPs[o];if(!(r in n))throw new Error("Topic "+r+" not defined");return void 0===n[r][t]?null:n[r][t].v},t.prototype.paramByBlock=function(r,t,o){var n=this.activeHardforks(o),e=n[n.length-1].name;return this.paramByHardfork(r,t,e)},t.prototype.isActivatedEIP=function(r){var t,o;if(this.eips().includes(r))return!0;try{for(var n=s(p.hardforks),e=n.next();!e.done;e=n.next()){var a=e.value[1];if(this.gteHardfork(a.name)&&"eips"in a&&a.eips.includes(r))return!0}}catch(r){t={error:r}}finally{try{e&&!e.done&&(o=n.return)&&o.call(n)}finally{if(t)throw t.error}}return!1},t.prototype.hardforkIsActiveOnBlock=function(r,t,o){var n;void 0===o&&(o={}),t=(0,c.toType)(t,c.TypeOutput.BN);var e=null!==(n=o.onlySupported)&&void 0!==n&&n;r=this._chooseHardfork(r,e);var a=this.hardforkBlockBN(r);return!(!a||!t.gte(a))},t.prototype.activeOnBlock=function(r,t){return this.hardforkIsActiveOnBlock(null,r,t)},t.prototype.hardforkGteHardfork=function(r,t,o){var n,e;void 0===o&&(o={});var a,i=void 0!==o.onlyActive&&o.onlyActive;r=this._chooseHardfork(r,o.onlySupported),a=i?this.activeHardforks(null,o):this.hardforks();var u=-1,f=-1,h=0;try{for(var l=s(a),c=l.next();!c.done;c=l.next()){var d=c.value;d.name===r&&(u=h),d.name===t&&(f=h),h+=1}}catch(r){n={error:r}}finally{try{c&&!c.done&&(e=l.return)&&e.call(l)}finally{if(n)throw n.error}}return u>=f&&-1!==f},t.prototype.gteHardfork=function(r,t){return this.hardforkGteHardfork(null,r,t)},t.prototype.hardforkIsActiveOnChain=function(r,t){var o,n,e;void 0===t&&(t={});var a=null!==(e=t.onlySupported)&&void 0!==e&&e;r=this._chooseHardfork(r,a);try{for(var i=s(this.hardforks()),u=i.next();!u.done;u=i.next()){var f=u.value;if(f.name===r&&null!==f.block)return!0}}catch(r){o={error:r}}finally{try{u&&!u.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return!1},t.prototype.activeHardforks=function(r,t){var o,n;void 0===t&&(t={});var e=[],a=this.hardforks();try{for(var i=s(a),u=i.next();!u.done;u=i.next()){var f=u.value;if(null!==f.block){if(null!=r&&r<f.block)break;t.onlySupported&&!this._isSupportedHardfork(f.name)||e.push(f)}}}catch(r){o={error:r}}finally{try{u&&!u.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return e},t.prototype.activeHardfork=function(r,t){void 0===t&&(t={});var o=this.activeHardforks(r,t);if(o.length>0)return o[o.length-1].name;throw new Error("No (supported) active hardfork found")},t.prototype.hardforkBlock=function(r){var t=this.hardforkBlockBN(r);return(0,c.toType)(t,c.TypeOutput.Number)},t.prototype.hardforkBlockBN=function(r){r=this._chooseHardfork(r,!1);var t=this._getHardfork(r).block;return null==t?null:new c.BN(t)},t.prototype.hardforkTD=function(r){r=this._chooseHardfork(r,!1);var t=this._getHardfork(r).td;return null==t?null:new c.BN(t)},t.prototype.isHardforkBlock=function(r,t){r=(0,c.toType)(r,c.TypeOutput.BN),t=this._chooseHardfork(t,!1);var o=this.hardforkBlockBN(t);return!!o&&o.eq(r)},t.prototype.nextHardforkBlock=function(r){var t=this.nextHardforkBlockBN(r);return(0,c.toType)(t,c.TypeOutput.Number)},t.prototype.nextHardforkBlockBN=function(r){r=this._chooseHardfork(r,!1);var t=this.hardforkBlockBN(r);return null===t?null:this.hardforks().reduce((function(r,o){var n=new c.BN(o.block);return n.gt(t)&&null===r?n:r}),null)},t.prototype.isNextHardforkBlock=function(r,t){r=(0,c.toType)(r,c.TypeOutput.BN),t=this._chooseHardfork(t,!1);var o=this.nextHardforkBlockBN(t);return null!==o&&o.eq(r)},t.prototype._calcForkHash=function(r){var t,o,n=e.from(this.genesis().hash.substr(2),"hex"),a=e.alloc(0),i=0;try{for(var u=s(this.hardforks()),f=u.next();!f.done;f=u.next()){var h=f.value,d=h.block;if(0!==d&&null!==d&&d!==i){var p=e.from(d.toString(16).padStart(16,"0"),"hex");a=e.concat([a,p])}if(h.name===r)break;null!==d&&(i=d)}}catch(r){t={error:r}}finally{try{f&&!f.done&&(o=u.return)&&o.call(u)}finally{if(t)throw t.error}}var y=e.concat([n,a]);return"0x"+(0,c.intToBuffer)((0,l.buf)(y)>>>0).toString("hex")},t.prototype.forkHash=function(r){r=this._chooseHardfork(r,!1);var t=this._getHardfork(r);if(null===t.block&&void 0===t.td){throw new Error("No fork hash calculation possible for future hardfork")}return void 0!==t.forkHash?t.forkHash:this._calcForkHash(r)},t.prototype.hardforkForForkHash=function(r){var t=this.hardforks().filter((function(t){return t.forkHash===r}));return t.length>=1?t[t.length-1]:null},t.prototype.genesis=function(){return this._chainParams.genesis},t.prototype.genesisState=function(){var r,t;switch(this.chainName()){case"mainnet":return o(31617);case"ropsten":return o(53712);case"rinkeby":return o(3023);case"kovan":return o(28777);case"goerli":return o(15382)}if(this._customChains&&this._customChains.length>0&&Array.isArray(this._customChains[0]))try{for(var n=s(this._customChains),e=n.next();!e.done;e=n.next()){var a=e.value;if(a[0].name===this.chainName())return a[1]}}catch(t){r={error:t}}finally{try{e&&!e.done&&(t=n.return)&&t.call(n)}finally{if(r)throw r.error}}return{}},t.prototype.hardforks=function(){return this._chainParams.hardforks},t.prototype.bootstrapNodes=function(){return this._chainParams.bootstrapNodes},t.prototype.dnsNetworks=function(){return this._chainParams.dnsNetworks},t.prototype.hardfork=function(){return this._hardfork},t.prototype.chainId=function(){return(0,c.toType)(this.chainIdBN(),c.TypeOutput.Number)},t.prototype.chainIdBN=function(){return new c.BN(this._chainParams.chainId)},t.prototype.chainName=function(){return this._chainParams.name},t.prototype.networkId=function(){return(0,c.toType)(this.networkIdBN(),c.TypeOutput.Number)},t.prototype.networkIdBN=function(){return new c.BN(this._chainParams.networkId)},t.prototype.eips=function(){return this._eips},t.prototype.consensusType=function(){var r,t,o,n=this.hardfork();try{for(var e=s(p.hardforks),a=e.next();!a.done;a=e.next()){var i=a.value;if("consensus"in i[1]&&(o=i[1].consensus.type),i[0]===n)break}}catch(t){r={error:t}}finally{try{a&&!a.done&&(t=e.return)&&t.call(e)}finally{if(r)throw r.error}}return o||this._chainParams.consensus.type},t.prototype.consensusAlgorithm=function(){var r,t,o,n=this.hardfork();try{for(var e=s(p.hardforks),a=e.next();!a.done;a=e.next()){var i=a.value;if("consensus"in i[1]&&(o=i[1].consensus.algorithm),i[0]===n)break}}catch(t){r={error:t}}finally{try{a&&!a.done&&(t=e.return)&&t.call(e)}finally{if(r)throw r.error}}return o||this._chainParams.consensus.algorithm},t.prototype.consensusConfig=function(){var r,t,o,n=this.hardfork();try{for(var e=s(p.hardforks),a=e.next();!a.done;a=e.next()){var i=a.value;if("consensus"in i[1]&&(o=i[1].consensus[i[1].consensus.algorithm]),i[0]===n)break}}catch(t){r={error:t}}finally{try{a&&!a.done&&(t=e.return)&&t.call(e)}finally{if(r)throw r.error}}if(o)return o;var u=this.consensusAlgorithm();return this._chainParams.consensus[u]},t.prototype.copy=function(){return Object.assign(Object.create(Object.getPrototypeOf(this)),this)},t}(h.EventEmitter);t.default=k}}]);